INSERT INTO Sales(store_id, customer_id, product_id, purchase_date, quantity, unit_price, shipped)(SELECT store_id, customer_id, product_id, purchase_date, quantity, unit_price, false FROM NewSales N WHERE NOT EXISTS (SELECT * from Sales S WHERE S.product_id=N.product_idAND S.store_id=N.store_id AND S.customer_id=N.customer_id AND S.purchase_date=N.purchase_date));/*There can be succinct variations, such as the following, which skips the listing of attributes of Sales. In this example, we also use the expression "*, false" in the SELECT clause to obtain all attributes from NewSales and a simple boolean expression “false”, instead of listing all the attributes for NewSales. INSERT INTO Sales(SELECT *, false FROM NewSales N WHERE NOT EXISTS (SELECT * from Sales S WHERE S.product_id=N.product_idAND S.store_id=N.store_id AND S.customer_id=N.customer_id AND S.purchase_date=N.purchase_date));Students may have used alternative ways to express the query the obtains the tuples in NewSales that are not in Sales. One example is with the use of IN as in the following:INSERT INTO Sales (store_id, customer_id, product_id, purchase_date, quantity, unit_price, shipped)SELECT store_id, customer_id, product_id, purchase_date, quantity, unit_price, falseFROM NewSalesWHERE (store_id, customer_id, product_id, purchase_date) NOT IN(SELECT store_id, customer_id, product_id, purchase_dateFROM Sales);Again, the list of attributes could be pruned.Another way is to get the sales that are in both Sales and NewSales by joining the two tables, and obtain the complement by using EXCEPT against the full table NewSales:INSERT INTO Sales (store_id, customer_id, product_id, purchase_date, quantity, unit_price, shipped)((SELECT store_id, customer_id, product_id, purchase_date, quantity, unit_price, falseFROM NewSales)EXCEPT(SELECT N.store_id, N.customer_id, N.product_id, N.purchase_date, N.quantity, N.unit_price, falseFROM NewSales N, Sales SWHERE S.product_id=N.product_idAND S.store_id=N.store_id AND S.customer_id=N.customer_id AND S.purchase_date=N.purchase_date));

*/