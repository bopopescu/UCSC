CMPS 111 - 01 
Winter 2017
Assignment 3
Erik Andersen (Team Captain)
Michael Cardoza
Yuzhuang Chen
Seongwoo Choi

Conclusion
After we finished the third assignment, we can conclude that the project was successful and the modified kernel was more efficient than the previously unmodified kernel. Here is more details that relate to our project conclusion:

With the log results, after stress --vm 25 --vm-bytes 150M --timeout 10s, we can see that plenty of pages are scanned. After scanning ~10,000 pages, we can see that we have zeroes across the board. After scanning ~600,000, we start to see some changes, we have active to inactive at ~70, and ~4,000 in inactive to cache. We did not start seeing any other changes until we scanned ~1,000,000 pages. Here, we see ~2,000 active to inactive, ~5,000 inactive to cache, and 110 pages flushed. The one thing we were unable to change was inactive to free.  We can see that clock algorithm has some good interaction between the active and inactive queues, or at least better compared to our fat chance algorithm.  

With our new fat chance algorithm, we saw changes starting at ~400,000 pages scanned with ~4,000 inactive to cache. We start seeing a lot of changes by the ~1,000,000th page scanned. Active to inactive ~200, inactive to cache ~5,000, and flush 66. We were still unable to see changes in inactive to free. With this information, we can see that we are having fewer active to inactive in our new algorithm and more inactive to cache. The results gave us the conclusion that clock algorithm is more efficient than fat chance because we are having less to do with cache and more to do with inactive and active queues.
